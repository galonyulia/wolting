parameters:
  - name: testEnvironment
    type: string
    default: 'dev'
    values:
      - 'dev'

variables:
  - group: wolt-e2e-automation # Placeholder for variable group 
  - name: workingDir
    value: '$(Build.SourcesDirectory)'
  - name: testTimeout
    value: 10
  - name: cancelTimeout
    value: 5

jobs:
  - job: run_ui_tests
    timeoutInMinutes: ${{ variables.testTimeout }}
    cancelTimeoutInMinutes: ${{ variables.cancelTimeout }}
    displayName: 'Run Wolt UI Automation Tests'

    pool:
      vmImage: 'ubuntu-latest' # this will be agent name or pool name

    steps:
      - checkout: self

      # Placeholder for npm authentication if needed
      # - task: npmAuthenticate@0
      #   displayName: 'NPM Authenticate'
      #   inputs:
      #     workingFile: '${{ variables.workingDir }}/.npmrc'
      #     customEndpoint: 'nexus-your-endpoint'

      - script: npm ci
        displayName: 'Install NPM Dependencies'
        workingDirectory: '${{ variables.workingDir }}'

      - script: npm run install:browsers
        displayName: 'Install Playwright Browsers'
        workingDirectory: '${{ variables.workingDir }}'

      - script: npm run test:ui
        displayName: 'Run UI Tests'
        workingDirectory: '${{ variables.workingDir }}'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Allure Report Artifacts'
        condition: succeededOrFailed()
        continueOnError: true
        inputs:
          PathtoPublish: '${{ variables.workingDir }}/allure-report'
          ArtifactName: 'allure-report-$(Agent.JobName)'

      # Placeholder for Slack notification on failure
      # - task: SlackWebhook@0
      #   displayName: 'Send Slack Notification on Failure'
      #   inputs:
      #     webhookurl: $(SLACK__WEBHOOK__URL)
      #     text: 'Triggered by: $(Build.RequestedFor). Wolt UI automation tests failed in ${{ parameters.testEnvironment }} environment. $(System.TeamFoundationCollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)'
      #   condition: failed()

      - task: PostBuildCleanup@3
        displayName: 'Post Build Cleanup'
        inputs:
          workingDirectory: '${{ variables.workingDir }}'
          clean: true
          contents: |
            test-results
            playwright-report 
